from random import *
from sympy import *
from Crypto.Util.number import *
from secret import flag

assert flag[:8]==b'zjnuctf{',flag[-1]==b'}'

flag=flag[8:-1]
flag1=bytes_to_long(flag[:6])
flag2=bytes_to_long(flag[6:]) # 2**45<=flag2<=2**48

def mathGetprime():
    A=getPrime(512)
    B=A-getPrime(16)
    print(A,B)
    return prevprime((B!)%A)   # B!为阶乘

p=mathGetprime()

'''
A=9015142898590576196826707258334172044464234843523229626789532087692097764472817093699259614093128952968162718847943242735786840270773651324155081699567823
B=9015142898590576196826707258334172044464234843523229626789532087692097764472817093699259614093128952968162718847943242735786840270773651324155081699533304
'''

e=65537
g=2
c1=pow(flag1,e,p)
c2=pow(g,flag2,p)
print('c1=',c1)
print('c2=',c2)

'''
c2=3816936947894360775597668534831397825191878510519645944332850933093609750685073647327948704609814945696325104925269030687891681867641260551706374705371536
c1=722936464747447159290940039484482900182128056996464164556643104608584815064763046843746689628444517699022022095341617433509062133657977506062424825685032
'''


